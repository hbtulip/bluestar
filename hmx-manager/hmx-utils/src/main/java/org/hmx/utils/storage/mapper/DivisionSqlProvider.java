package org.hmx.utils.storage.mapper;

import static org.apache.ibatis.jdbc.SqlBuilder.BEGIN;
import static org.apache.ibatis.jdbc.SqlBuilder.DELETE_FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.FROM;
import static org.apache.ibatis.jdbc.SqlBuilder.INSERT_INTO;
import static org.apache.ibatis.jdbc.SqlBuilder.ORDER_BY;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT;
import static org.apache.ibatis.jdbc.SqlBuilder.SELECT_DISTINCT;
import static org.apache.ibatis.jdbc.SqlBuilder.SET;
import static org.apache.ibatis.jdbc.SqlBuilder.SQL;
import static org.apache.ibatis.jdbc.SqlBuilder.UPDATE;
import static org.apache.ibatis.jdbc.SqlBuilder.VALUES;
import static org.apache.ibatis.jdbc.SqlBuilder.WHERE;

import java.util.List;
import java.util.Map;
import org.hmx.utils.storage.domain.Division;
import org.hmx.utils.storage.domain.DivisionExample.Criteria;
import org.hmx.utils.storage.domain.DivisionExample.Criterion;
import org.hmx.utils.storage.domain.DivisionExample;

public class DivisionSqlProvider {

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_division
     *
     * @mbggenerated
     */
    public String countByExample(DivisionExample example) {
        BEGIN();
        SELECT("count(*)");
        FROM("t_division");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_division
     *
     * @mbggenerated
     */
    public String deleteByExample(DivisionExample example) {
        BEGIN();
        DELETE_FROM("t_division");
        applyWhere(example, false);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_division
     *
     * @mbggenerated
     */
    public String insertSelective(Division record) {
        BEGIN();
        INSERT_INTO("t_division");
        
        if (record.getOilregId() != null) {
            VALUES("oilreg_id", "#{oilregId,jdbcType=BIGINT}");
        }
        
        if (record.getStoreId() != null) {
            VALUES("store_id", "#{storeId,jdbcType=BIGINT}");
        }
        
        if (record.getOiltankId() != null) {
            VALUES("oiltank_id", "#{oiltankId,jdbcType=BIGINT}");
        }
        
        if (record.getOilMassLitre() != null) {
            VALUES("oil_mass_litre", "#{oilMassLitre,jdbcType=REAL}");
        }
        
        if (record.getOilCosttotal() != null) {
            VALUES("oil_costtotal", "#{oilCosttotal,jdbcType=BIGINT}");
        }
        
        if (record.getTotalAmount() != null) {
            VALUES("total_amount", "#{totalAmount,jdbcType=BIGINT}");
        }
        
        if (record.getTotalCount() != null) {
            VALUES("total_count", "#{totalCount,jdbcType=INTEGER}");
        }
        
        if (record.getTotalLitre() != null) {
            VALUES("total_litre", "#{totalLitre,jdbcType=REAL}");
        }
        
        if (record.getStatus() != null) {
            VALUES("status", "#{status,jdbcType=INTEGER}");
        }
        
        if (record.getDivAmount() != null) {
            VALUES("div_amount", "#{divAmount,jdbcType=BIGINT}");
        }
        
        if (record.getDivCount() != null) {
            VALUES("div_count", "#{divCount,jdbcType=INTEGER}");
        }
        
        if (record.getDivLitre() != null) {
            VALUES("div_litre", "#{divLitre,jdbcType=REAL}");
        }
        
        if (record.getDivStarttime() != null) {
            VALUES("div_starttime", "#{divStarttime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrigger1PaymentId() != null) {
            VALUES("trigger1_payment_id", "#{trigger1PaymentId,jdbcType=BIGINT}");
        }
        
        if (record.getTrigger1Divamount() != null) {
            VALUES("trigger1_divamount", "#{trigger1Divamount,jdbcType=BIGINT}");
        }
        
        if (record.getDivEndttime() != null) {
            VALUES("div_endttime", "#{divEndttime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrigger2PaymentId() != null) {
            VALUES("trigger2_payment_id", "#{trigger2PaymentId,jdbcType=BIGINT}");
        }
        
        if (record.getTrigger2Divamount() != null) {
            VALUES("trigger2_divamount", "#{trigger2Divamount,jdbcType=BIGINT}");
        }
        
        if (record.getMatchOiltype() != null) {
            VALUES("match_oiltype", "#{matchOiltype,jdbcType=INTEGER}");
        }
        
        if (record.getOilTypeId() != null) {
            VALUES("oil_type_id", "#{oilTypeId,jdbcType=BIGINT}");
        }
        
        if (record.getRfAmount() != null) {
            VALUES("rf_amount", "#{rfAmount,jdbcType=BIGINT}");
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_division
     *
     * @mbggenerated
     */
    public String selectByExample(DivisionExample example) {
        BEGIN();
        if (example != null && example.isDistinct()) {
            SELECT_DISTINCT("id");
        } else {
            SELECT("id");
        }
        SELECT("oilreg_id");
        SELECT("store_id");
        SELECT("oiltank_id");
        SELECT("oil_mass_litre");
        SELECT("oil_costtotal");
        SELECT("total_amount");
        SELECT("total_count");
        SELECT("total_litre");
        SELECT("status");
        SELECT("div_amount");
        SELECT("div_count");
        SELECT("div_litre");
        SELECT("div_starttime");
        SELECT("trigger1_payment_id");
        SELECT("trigger1_divamount");
        SELECT("div_endttime");
        SELECT("trigger2_payment_id");
        SELECT("trigger2_divamount");
        SELECT("match_oiltype");
        SELECT("oil_type_id");
        SELECT("rf_amount");
        FROM("t_division");
        applyWhere(example, false);
        
        if (example != null && example.getOrderByClause() != null) {
            ORDER_BY(example.getOrderByClause());
        }
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_division
     *
     * @mbggenerated
     */
    public String updateByExampleSelective(Map<String, Object> parameter) {
        Division record = (Division) parameter.get("record");
        DivisionExample example = (DivisionExample) parameter.get("example");
        
        BEGIN();
        UPDATE("t_division");
        
        if (record.getId() != null) {
            SET("id = #{record.id,jdbcType=BIGINT}");
        }
        
        if (record.getOilregId() != null) {
            SET("oilreg_id = #{record.oilregId,jdbcType=BIGINT}");
        }
        
        if (record.getStoreId() != null) {
            SET("store_id = #{record.storeId,jdbcType=BIGINT}");
        }
        
        if (record.getOiltankId() != null) {
            SET("oiltank_id = #{record.oiltankId,jdbcType=BIGINT}");
        }
        
        if (record.getOilMassLitre() != null) {
            SET("oil_mass_litre = #{record.oilMassLitre,jdbcType=REAL}");
        }
        
        if (record.getOilCosttotal() != null) {
            SET("oil_costtotal = #{record.oilCosttotal,jdbcType=BIGINT}");
        }
        
        if (record.getTotalAmount() != null) {
            SET("total_amount = #{record.totalAmount,jdbcType=BIGINT}");
        }
        
        if (record.getTotalCount() != null) {
            SET("total_count = #{record.totalCount,jdbcType=INTEGER}");
        }
        
        if (record.getTotalLitre() != null) {
            SET("total_litre = #{record.totalLitre,jdbcType=REAL}");
        }
        
        if (record.getStatus() != null) {
            SET("status = #{record.status,jdbcType=INTEGER}");
        }
        
        if (record.getDivAmount() != null) {
            SET("div_amount = #{record.divAmount,jdbcType=BIGINT}");
        }
        
        if (record.getDivCount() != null) {
            SET("div_count = #{record.divCount,jdbcType=INTEGER}");
        }
        
        if (record.getDivLitre() != null) {
            SET("div_litre = #{record.divLitre,jdbcType=REAL}");
        }
        
        if (record.getDivStarttime() != null) {
            SET("div_starttime = #{record.divStarttime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrigger1PaymentId() != null) {
            SET("trigger1_payment_id = #{record.trigger1PaymentId,jdbcType=BIGINT}");
        }
        
        if (record.getTrigger1Divamount() != null) {
            SET("trigger1_divamount = #{record.trigger1Divamount,jdbcType=BIGINT}");
        }
        
        if (record.getDivEndttime() != null) {
            SET("div_endttime = #{record.divEndttime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrigger2PaymentId() != null) {
            SET("trigger2_payment_id = #{record.trigger2PaymentId,jdbcType=BIGINT}");
        }
        
        if (record.getTrigger2Divamount() != null) {
            SET("trigger2_divamount = #{record.trigger2Divamount,jdbcType=BIGINT}");
        }
        
        if (record.getMatchOiltype() != null) {
            SET("match_oiltype = #{record.matchOiltype,jdbcType=INTEGER}");
        }
        
        if (record.getOilTypeId() != null) {
            SET("oil_type_id = #{record.oilTypeId,jdbcType=BIGINT}");
        }
        
        if (record.getRfAmount() != null) {
            SET("rf_amount = #{record.rfAmount,jdbcType=BIGINT}");
        }
        
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_division
     *
     * @mbggenerated
     */
    public String updateByExample(Map<String, Object> parameter) {
        BEGIN();
        UPDATE("t_division");
        
        SET("id = #{record.id,jdbcType=BIGINT}");
        SET("oilreg_id = #{record.oilregId,jdbcType=BIGINT}");
        SET("store_id = #{record.storeId,jdbcType=BIGINT}");
        SET("oiltank_id = #{record.oiltankId,jdbcType=BIGINT}");
        SET("oil_mass_litre = #{record.oilMassLitre,jdbcType=REAL}");
        SET("oil_costtotal = #{record.oilCosttotal,jdbcType=BIGINT}");
        SET("total_amount = #{record.totalAmount,jdbcType=BIGINT}");
        SET("total_count = #{record.totalCount,jdbcType=INTEGER}");
        SET("total_litre = #{record.totalLitre,jdbcType=REAL}");
        SET("status = #{record.status,jdbcType=INTEGER}");
        SET("div_amount = #{record.divAmount,jdbcType=BIGINT}");
        SET("div_count = #{record.divCount,jdbcType=INTEGER}");
        SET("div_litre = #{record.divLitre,jdbcType=REAL}");
        SET("div_starttime = #{record.divStarttime,jdbcType=TIMESTAMP}");
        SET("trigger1_payment_id = #{record.trigger1PaymentId,jdbcType=BIGINT}");
        SET("trigger1_divamount = #{record.trigger1Divamount,jdbcType=BIGINT}");
        SET("div_endttime = #{record.divEndttime,jdbcType=TIMESTAMP}");
        SET("trigger2_payment_id = #{record.trigger2PaymentId,jdbcType=BIGINT}");
        SET("trigger2_divamount = #{record.trigger2Divamount,jdbcType=BIGINT}");
        SET("match_oiltype = #{record.matchOiltype,jdbcType=INTEGER}");
        SET("oil_type_id = #{record.oilTypeId,jdbcType=BIGINT}");
        SET("rf_amount = #{record.rfAmount,jdbcType=BIGINT}");
        
        DivisionExample example = (DivisionExample) parameter.get("example");
        applyWhere(example, true);
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_division
     *
     * @mbggenerated
     */
    public String updateByPrimaryKeySelective(Division record) {
        BEGIN();
        UPDATE("t_division");
        
        if (record.getOilregId() != null) {
            SET("oilreg_id = #{oilregId,jdbcType=BIGINT}");
        }
        
        if (record.getStoreId() != null) {
            SET("store_id = #{storeId,jdbcType=BIGINT}");
        }
        
        if (record.getOiltankId() != null) {
            SET("oiltank_id = #{oiltankId,jdbcType=BIGINT}");
        }
        
        if (record.getOilMassLitre() != null) {
            SET("oil_mass_litre = #{oilMassLitre,jdbcType=REAL}");
        }
        
        if (record.getOilCosttotal() != null) {
            SET("oil_costtotal = #{oilCosttotal,jdbcType=BIGINT}");
        }
        
        if (record.getTotalAmount() != null) {
            SET("total_amount = #{totalAmount,jdbcType=BIGINT}");
        }
        
        if (record.getTotalCount() != null) {
            SET("total_count = #{totalCount,jdbcType=INTEGER}");
        }
        
        if (record.getTotalLitre() != null) {
            SET("total_litre = #{totalLitre,jdbcType=REAL}");
        }
        
        if (record.getStatus() != null) {
            SET("status = #{status,jdbcType=INTEGER}");
        }
        
        if (record.getDivAmount() != null) {
            SET("div_amount = #{divAmount,jdbcType=BIGINT}");
        }
        
        if (record.getDivCount() != null) {
            SET("div_count = #{divCount,jdbcType=INTEGER}");
        }
        
        if (record.getDivLitre() != null) {
            SET("div_litre = #{divLitre,jdbcType=REAL}");
        }
        
        if (record.getDivStarttime() != null) {
            SET("div_starttime = #{divStarttime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrigger1PaymentId() != null) {
            SET("trigger1_payment_id = #{trigger1PaymentId,jdbcType=BIGINT}");
        }
        
        if (record.getTrigger1Divamount() != null) {
            SET("trigger1_divamount = #{trigger1Divamount,jdbcType=BIGINT}");
        }
        
        if (record.getDivEndttime() != null) {
            SET("div_endttime = #{divEndttime,jdbcType=TIMESTAMP}");
        }
        
        if (record.getTrigger2PaymentId() != null) {
            SET("trigger2_payment_id = #{trigger2PaymentId,jdbcType=BIGINT}");
        }
        
        if (record.getTrigger2Divamount() != null) {
            SET("trigger2_divamount = #{trigger2Divamount,jdbcType=BIGINT}");
        }
        
        if (record.getMatchOiltype() != null) {
            SET("match_oiltype = #{matchOiltype,jdbcType=INTEGER}");
        }
        
        if (record.getOilTypeId() != null) {
            SET("oil_type_id = #{oilTypeId,jdbcType=BIGINT}");
        }
        
        if (record.getRfAmount() != null) {
            SET("rf_amount = #{rfAmount,jdbcType=BIGINT}");
        }
        
        WHERE("id = #{id,jdbcType=BIGINT}");
        
        return SQL();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_division
     *
     * @mbggenerated
     */
    protected void applyWhere(DivisionExample example, boolean includeExamplePhrase) {
        if (example == null) {
            return;
        }
        
        String parmPhrase1;
        String parmPhrase1_th;
        String parmPhrase2;
        String parmPhrase2_th;
        String parmPhrase3;
        String parmPhrase3_th;
        if (includeExamplePhrase) {
            parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        } else {
            parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
            parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
            parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
            parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
            parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
            parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
        }
        
        StringBuilder sb = new StringBuilder();
        List<Criteria> oredCriteria = example.getOredCriteria();
        boolean firstCriteria = true;
        for (int i = 0; i < oredCriteria.size(); i++) {
            Criteria criteria = oredCriteria.get(i);
            if (criteria.isValid()) {
                if (firstCriteria) {
                    firstCriteria = false;
                } else {
                    sb.append(" or ");
                }
                
                sb.append('(');
                List<Criterion> criterions = criteria.getAllCriteria();
                boolean firstCriterion = true;
                for (int j = 0; j < criterions.size(); j++) {
                    Criterion criterion = criterions.get(j);
                    if (firstCriterion) {
                        firstCriterion = false;
                    } else {
                        sb.append(" and ");
                    }
                    
                    if (criterion.isNoValue()) {
                        sb.append(criterion.getCondition());
                    } else if (criterion.isSingleValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
                        } else {
                            sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,criterion.getTypeHandler()));
                        }
                    } else if (criterion.isBetweenValue()) {
                        if (criterion.getTypeHandler() == null) {
                            sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
                        } else {
                            sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j, criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
                        }
                    } else if (criterion.isListValue()) {
                        sb.append(criterion.getCondition());
                        sb.append(" (");
                        List<?> listItems = (List<?>) criterion.getValue();
                        boolean comma = false;
                        for (int k = 0; k < listItems.size(); k++) {
                            if (comma) {
                                sb.append(", ");
                            } else {
                                comma = true;
                            }
                            if (criterion.getTypeHandler() == null) {
                                sb.append(String.format(parmPhrase3, i, j, k));
                            } else {
                                sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
                            }
                        }
                        sb.append(')');
                    }
                }
                sb.append(')');
            }
        }
        
        if (sb.length() > 0) {
            WHERE(sb.toString());
        }
    }
}